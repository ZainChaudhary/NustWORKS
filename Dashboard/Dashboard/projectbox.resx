<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAANBSURBVHhe7Zs7iBNBGMfHByq+FS1EsFB8oYWID1RURBG0EixEO0G8TsEXiiABG7VQsbHSg0MU
        NjMb5MRCCyu5RgRFBQsJIhxySWYmuUIwnOvM5tNi97s1yU7izLI/+HW33/f997KPm8yRnJycnJx+443N
        JX5tB2HymPK08hSh8ijxG2vgJzKIV19MfHlBhR0hTEwog0ksE8qPw1EZgckBFWw8EjRZKs6RwfIsqOAw
        TNyJhWvfpvJleLk4Ses3jwXr1CbxxUmo6gj6mmdCRoKksUlK9W1Q3QGYvISESOsLqO4ATLyJDG/CCeKN
        L4UOFjM8OlsNq29gWIh0FuVB6GIxTK5EhzfjeehiMVRuQQY3ZQG6WExR7kcGN6UDJ4DWtyODG5JfgS4W
        4/EV+PAm5Cegi8Xod3h0eBPyXdDFcpj4Gh8+tRPkUW0+dLAcJoqR4U34Aao7AJUXkQDp9MVdqO4AepUH
        C5FGX5yB6pYz9H2OGtjkX4J/bJCnlXnQxWJYfSsyvCFdeArQ+mp8eAPS2gboYjFBMEUNW4kNn15BCsFU
        6GI5TFyPDG9AfgOqO4AXzCBU3FaD/4oH6cp75HkwE6o7hC8+ImE69QtUcxBfPEACdaYvH0M1Byny3Wio
        TizxQ1DNQfQTgYr3aLD2LKv7yTSo5ihM7IuEal/9pWkmYPwmGjDZwfATlAmeyUVIwGT96no4OgOUxEI0
        ZJK0ug6OzgDdfAIydQK86nI0ZKJyMxydAfT2FzRkonvg6AxAxREk4D+UA3C044TXv/yEh0z0G2GVZVDF
        UbzGWhXkbSRYJ35WT5BNUM0hPL5ADV9QL0A/IoG68Sfx+S0y3FgC1S1GL1lReV8N3dmusLYMT+ZD+54O
        4YYIveGxJ7tCJlHdU6g4G266/G+EOz715kcxGh+wb44Ryq/29yuzcLmLX1bNe7Hw2a1cfSKu9X5zpX49
        ZeJdpLk96iU4n2+EaQ1TrO1UTXisqX1KdSL2wtSGKMlVqnA10shmubnd560vOl5HGjigHDGzoMLkAbyB
        A1J+GFKkgImhWGFnlE8gRQp6s92lX45Cii5pbXhK+g8P+031kqTX5MOtrw77KpgOaXJycnJycv5CyG+D
        Txg2P8JnLwAAAABJRU5ErkJggg==
</value>
  </data>
</root>